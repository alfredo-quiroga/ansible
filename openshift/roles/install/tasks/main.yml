---
- name: Prepare disk
  become: true
  parted:
    device: "{{ item.device }}"
    number: 1
    state: present
  with_items: "{{ hostvars[inventory_hostname]['volumes'] }}"
  when: item.name != "docker"

- name: Create filesystem
  become: true
  filesystem:
    fstype: xfs
    dev: "{{ item.device }}1"
  with_items: "{{ hostvars[inventory_hostname]['volumes'] }}"
  when: item.name != "docker"

- name: Mount device
  become: true
  mount:
    path: "{{ item.mountpoint }}"
    src: "{{ item.device }}1"
    fstype: xfs
    state: mounted
  with_items: "{{ hostvars[inventory_hostname]['volumes'] }}"  
  when: item.name != "docker"

- name: Copy hosts template file
  become: true
  template:
    src: hosts.j2
    dest: /etc/ansible/hosts
    owner: root
    group: root
    mode: 0644
  when: inventory_hostname == groups['masters'][0]

- name: Configure htpasswd for authentication 
  become: true
  htpasswd:
    path: '/etc/origin/master/htpasswd'
    name: "{{ ocpuser }}"
    password: "{{ ocppass }}"  
  when: inventory_hostname == groups['masters'][0]
  run_once: true
      
# - name: Install OpenShift unattended
#   shell: ansible-playbook -i /etc/ansible/hosts -e deprecation_warnings=False /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
#   when: inventory_hostname == groups['masters'][0]
#   run_once: true
#   ignore_errors: True

# - name: set htpasswd user up as a cluster-admin
#   run_once: true
#   shell: |
#     oadm policy add-cluster-role-to-user cluster-admin admin
#     oc project management-infra
#     oadm policy add-role-to-user -n management-infra admin -z management-admin
#     oadm policy add-role-to-user -n management-infra management-infra-admin -z management-admin
#     oadm policy add-cluster-role-to-user cluster-reader system:serviceaccount:management-infra:management-admin
#     oadm policy add-scc-to-user privileged system:serviceaccount:management-infra:management-admin
#     oc sa get-token -n management-infra management-admin > /root/token.txt
    

  
