---
- name: create ssh key on root account
  hosts: ocp
  shell: 'ssh-keygen -b 2048 -t rsa -f {{ ansible_user_dir }}/.ssh/id_rsa -q -N ""'

- name: capture master public key
  hosts: ocp
  shell: "cat {{ ansible_user_dir }}/.ssh/id_rsa.pub"  
  register: pubkey

- name: add key to authorized keys
  authorized_key: 
    user: "{{ ssh_user }}"
    state: present
    key: "{{ pubkey.stdout }}"

- name: Install necessary packages
  yum:  
    name: '{{ item }}'
    state: present
  with_items: 
  - wget 
  - git 
  - net-tools 
  - bind-utils 
  - iptables-services 
  - bridge-utils 
  - bash-completion 
  - kexec-tools 
  - sos 
  - psacct
  - atomic-openshift-utils
  - docker-1.12.6
  - ipa-client
  - httpd-tools

- name: Update the system
  yum:  
    name: '*'

- name: Check for reboot hint
  shell: LAST_KERNEL=$(rpm -q --last kernel | perl -pe 's/^kernel-(\S+).*/$1/' | head -1);CURRENT_KERNEL=$(uname -r); if [ $LAST_KERNEL != $CURRENT_KERNEL ]; then echo 'reboot'; else echo 'no'; fi
  ignore_errors: true
  register: reboot_hint

- name: Rebooting...
  shell: sleep 2 && /usr/sbin/reboot
  async: 1
  poll: 0
  ignore_errors: true
  when: reboot_hint.stdout.find("reboot") != -1

- name: Wait for host to boot
  become: false
  local_action: wait_for
  args:
    host: "{{ inventory_hostname }}"
    port: 22
    state: started
    delay: 30
    timeout: 180
  when: reboot_hint.stdout.find("reboot") != -1

- name: Configure docker storage
  template:
    src: docker-storage-setup.j2
    dest: /etc/sysconfig/docker-storage-setup
    owner: root
    group: root
    mode: 0644

- name: Run docker storage setup
  command: docker-storage-setup

- name: Start and enable Docker
  service:
    name: docker
    state: started
    enabled: true  