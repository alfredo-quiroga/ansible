f---
# ok: [tower] => {
#     "changed": false, 
#     "manageiq": {
#         "action": "Provision", 
#         "api_token": "62dc899737485fc6060d0b05bb068354", 
#         "api_url": "https://192.168.76.13", 
#         "group": "groups/1000000000002", 
#         "service": "services/1000000000036", 
#         "user": "users/1000000000004"
#     }
# }

- name: 
  debug:
    var: manageiq
  when: manageiq is defined

- name: Set the Provider URL
  set_fact:
    cf_provider_url: "{{ manageiq.api_url }}/api/providers/{{ cf_provider_id }}"

- name: update cloudforms provider
  uri:
    url: "{{ cf_provider_url }}"
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"     
    validate_certs: False
    method: POST
    body_format: json
    body:
      action: refresh
    status_code: 200
  register: refresh_task

- name: Set the task href
  set_fact:
    task_url: "{{ refresh_task.json.task_href }}"

- name:
  debug:
    var: task_url

- name: Wait for the provider refresh to end
  uri:
    url: "{{ task_url }}"
    method: GET
    validate_certs: False
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"     
    body_format: json
    status_code: 200
  register: task_result
  until: task_result.json.state == 'Finished' or task_result.json.status == 'Error'
  failed_when: task_result.json.status == 'Error'
  retries: "{{ cf_max_retries }}"
  delay: "{{ cf_retry_interval }}"

- name: Lookup instance href
  uri:
    url: "{{ manageiq.api_url }}/api/vms?filter[]=name={{ osp_instance_name }}&expand=resources"
    validate_certs: False
    method: GET
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"   
    body_format: json
    body: { "action": "refresh" }
    status_code: 200
  register: instance_href

- debug:
    var: instance_href

- name: Set the Service URL
  set_fact:
    svc_url: "/api/{{ manageiq.service }}"

- name: Initialize an empty list for vms
  set_fact:
    vms: []

- name: Append resource href to vms list
  set_fact:
    vms: "{{ vms }} + [ { 'href': svc_url, 'resource': { 'href': '/api/vms/{{ item.json.resources[0].id }}' } } ]"
  with_items: "{{ instance_href.results }}"

- debug: 
    var: vms

- name: Register vms with the service
  uri:
    url: "{{ manageiq.api_url }}/api/services"
    method: POST
    body_format: json
    body:
      action: add_resource
      resources: "{{ vms }}"
    validate_certs: False
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: registration

- debug: 
    var: registration.json.results[0].success

- name: Check if the VM was successfully attached to service
  fail: msg="{{ registration.json.results[0].message }}"
  when: registration.json.results[0].success == false